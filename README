== Inscriptio

== Contributors

* Daniel Collis-Puro: http://github.com/djcp/
* Anita Patel: http://github.com/apatel/
* Justin Clark: http://github.com/jdcc

== License and Copyright

This application is released under a GPLv3 license.

2011 President and Fellows of Harvard College

h1. Inscriptio Requirements

h2. System Requirements

* Ruby 1.8.7
* Rails 3.0.5
* A postgresql 8.x database server. Other databases MAY work (e.g. mysql), but they are untested.
* A webserver capable of interfacing with Rails applications. Ideally, apache or nginx with mod_passenger installed.
* Linux or OSX. Linux would be easier.

h2. Application Set-up Steps

* Get code from: https://github.com/berkmancenter/Inscriptio
* Run bundle install. You will probably have to install OS-vendor supplied libraries to satisfy some gem install requirements.
* Create the database and run migrations, modifying "config/database.yml" to suit your environment.
* Modify "config/00_inscriptio_init.rb"
* Run bootstrap rake tasks: 
 rake bootstrap:inscriptio:run_all
* Create cron job to automatically run rake tasks for sending out notifications expiring and expired reservations as well as deleting bulletin board posts after post lifetime: 
 rake inscriptio:cron_task:delete_posts
 rake inscriptio:cron_task:send_expiration_notification
 rake inscriptio:cron_task:send_expired_notification
 rake inscriptio:cron_task:run_all

h2. Order of Operations for Fresh Install

* Sign in as admin
* Create User Types (may change once PIN is in)
* Create School Affiliations (may change once PIN is in)
* Create library
* Create floors
* Create asset types
* Upload/create assets (for upload you will need floor and asset types ID's)
* Add assets to floor map (remember to hit 'Apply' button to save asset on map)
* Go to 'Reservation Notices' section and click 'Generate Notices'


